{"version":3,"sources":["NavigationBar/NavigationBar.jsx","CategoryIcon/CategoryIcon.jsx","AllCategories/AllCategories.jsx","RecipeListItem/RecipeListItem.jsx","RecipeList/RecipeList.jsx","Home/Home.jsx","Category/Category.jsx","RecipeDetails/RecipeDetail.jsx","Error/Error.jsx","App.js","index.js"],"names":["NavigationBar","react_default","a","createElement","className","react_router_dom","to","id","placeholder","title","CategoryIcon","props","concat","category","src","alt","AllCategories","displayContent","categories","map","src_CategoryIcon_CategoryIcon","ArticleListItem","url","recipe","image","RecipeList","articles","RecipeListItem","key","Home","src_AllCategories_AllCategories","src_RecipeList_RecipeList","recipes","Category","_useState","useState","_useState2","Object","slicedToArray","fetchedCategoryData","setFetchedCategoryData","useEffect","fetchData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","categoryId","response","responseJson","wrap","_context","prev","next","fetch","sent","json","values","stop","_x","apply","this","arguments","isEmpty","react","Baz","Error","App","fetchedRecipes","setFetchedRecipes","_useState3","_useState4","fetchedCategories","setFetchedCategories","recipesResponse","recipesResponseJson","_callee2","categoriesResponse","categoriesResponseJson","_context2","src_NavigationBar_NavigationBar","react_router","path","src_Home_Home","exact","render","_ref3","match","src_Category_Category","params","_ref4","RecipeDetail","component","ReactDOM","basename","test","window","location","src_App","document","getElementById"],"mappings":"uNAuBeA,EApBO,WAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,YACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAjB,UACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeG,GAAG,iBAAiBC,YAAY,kBAChEP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBK,MAAM,UAAxC,qBCMHC,EAhBM,SAACC,GACpB,OACEV,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,aAAAM,OAAeD,EAAME,WACzBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAQ,OAAcD,EAAME,WAC9BZ,EAAAC,EAAAC,cAAA,OAAKW,IAAG,aAAAF,OAAeD,EAAME,SAArB,QAAqCE,IAAKJ,EAAME,WACxDZ,EAAAC,EAAAC,cAAA,UAAKQ,EAAME,cCmBZG,EAzBO,SAACL,GACrB,IAAIM,EAcJ,OAZEA,EADEN,EAAMO,WAENjB,EAAAC,EAAAC,cAAA,UACGQ,EAAMO,WAAWC,IAAK,SAACN,GACtB,OAAQZ,EAAAC,EAAAC,cAACiB,EAAD,CAAcP,SAAUA,OAMrBZ,EAAAC,EAAAC,cAAA,gCAIjBF,EAAAC,EAAAC,cAAA,WACGc,ICgBQI,EA/BS,SAACV,GAOvB,OACEV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKmB,IAAKX,EAAMY,OAAOC,MAAOT,IAAKJ,EAAMY,OAAOd,QAC9CR,EAAAC,EAAAC,cAAA,UAAKQ,EAAMY,OAAOd,WCUbgB,EAzBI,SAACd,GAClB,IAAIM,EAcJ,OAXEA,EADEN,EAAMe,SAENzB,EAAAC,EAAAC,cAAA,UACGQ,EAAMe,SAASP,IAAI,SAACI,GAAD,OAClBtB,EAAAC,EAAAC,cAACwB,EAAD,CAAgBJ,OAAQA,EAAQK,IAAKL,EAAOhB,QAKjCN,EAAAC,EAAAC,cAAA,gCAIjBF,EAAAC,EAAAC,cAAA,WACGc,ICHQY,EAbF,SAAClB,GACV,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2B,EAAD,CAAeZ,WAAYP,EAAMO,aACjCjB,EAAAC,EAAAC,cAAC4B,EAAD,CAAYC,QAASrB,EAAMqB,mBCwBxBC,EA3BE,SAACtB,GAAU,IAAAuB,EAC8BC,qBAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBK,EADiBH,EAAA,GACII,EADJJ,EAAA,GAgBxB,OAdAK,oBAAU,WACN,IAAMC,EAAS,eAAAC,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAA3C,EAAA4C,KAAG,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA3C,EAAAkD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAAQN,EAARD,EAAQC,YAAR,CAAAI,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGaC,MAAK,0CAAA5C,OAA2CqC,IAH7D,cAGJC,EAHIG,EAAAI,KAAAJ,EAAAE,KAAA,EAIiBL,EAASQ,OAJ1B,OAIJP,EAJIE,EAAAI,KAKVjB,EAAuBH,OAAOsB,OAAOR,IAL3B,wBAAAE,EAAAO,SAAAb,MAAH,gBAAAc,GAAA,OAAAlB,EAAAmB,MAAAC,KAAAC,YAAA,GAQXC,kBAAQ1B,IACRG,EAAU/B,EAAMsC,aAErB,CAACV,EAAqB5B,EAAMsC,aAExBgB,kBAAQ1B,GAAuB,KAClC2B,EAAA,MAAA/D,cAAA,WAEI+D,EAAA,MAAA/D,cAAA,UAAKQ,EAAMsC,WAAX,KACAiB,EAAA,MAAA/D,cAAC4B,EAAD,CAAYC,QAASO,EAAoBP,YCftCmC,EARH,SAACxD,GACT,OACIV,EAAAC,EAAAC,cAAA,qCCMOiE,EARD,WACV,OACInE,EAAAC,EAAAC,cAAA,8BCwEOkE,MAjEf,WAAe,IAAAnC,EAC+BC,qBAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNoC,EADMlC,EAAA,GACUmC,EADVnC,EAAA,GAAAoC,EAEqCrC,qBAFrCsC,EAAApC,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,GAENE,EAFMD,EAAA,GAEaE,EAFbF,EAAA,GA2Bb,OAxBAhC,oBAAU,WACR,IAAM6B,EAAc,eAAAtB,EAAAX,OAAAO,EAAA,EAAAP,CAAAQ,EAAA3C,EAAA4C,KAAG,SAAAC,IAAA,IAAA6B,EAAAC,EAAA,OAAAhC,EAAA3C,EAAAkD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAESC,MAAM,2CAFf,cAEfoB,EAFevB,EAAAI,KAAAJ,EAAAE,KAAA,EAGaqB,EAAgBlB,OAH7B,OAGfmB,EAHexB,EAAAI,KAIrBc,EAAkBlC,OAAOsB,OAAOkB,IAJX,wBAAAxB,EAAAO,SAAAb,MAAH,yBAAAC,EAAAc,MAAAC,KAAAC,YAAA,GAMdU,EAAiB,eAAA/B,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAA3C,EAAA4C,KAAG,SAAAgC,IAAA,IAAAC,EAAAC,EAAA,OAAAnC,EAAA3C,EAAAkD,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EAESC,MAAM,8CAFf,cAElBuB,EAFkBE,EAAAxB,KAAAwB,EAAA1B,KAAA,EAGawB,EAAmBrB,OAHhC,OAGlBsB,EAHkBC,EAAAxB,KAIxBkB,EAAqBtC,OAAOsB,OAAOqB,IAJX,wBAAAC,EAAArB,SAAAkB,MAAH,yBAAAnC,EAAAmB,MAAAC,KAAAC,YAAA,GAOnBC,kBAAQK,IACVA,IAEEL,kBAAQS,IACVA,KAID,CAACJ,EAAgBI,IAEbT,kBAAQK,GAAkB,KAC/BrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yDAEFF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC+E,EAAD,OAEFjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOC,KAAK,KAAInF,EAAAC,EAAAC,cAACkF,EAAD,CAAMrD,QAASsC,EAAgBpD,WAAYwD,KAC3DzE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,KAAK,wBACLE,OAAK,EACLC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAGNxF,EAAAC,EAAAC,cAACuF,EAAD,CACEzC,WAAYwC,EAAME,OAAO1C,gBAI/BhD,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,KAAK,cACLE,OAAK,EACLC,OAAQ,SAAAK,GAAA,IAAGH,EAAHG,EAAGH,MAAH,OAGNxF,EAAAC,EAAAC,cAAC0F,EAAD,CACEtF,GAAIkF,EAAME,OAAOpF,QAIvBN,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOW,UAAW1B,OChE1B2B,IAASR,OACPtF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ2F,SAAU,YAAYC,KAAKC,OAAOC,UAAY,oCAAsC,IAC1FlG,EAAAC,EAAAC,cAACiG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.3dfacf66.chunk.js","sourcesContent":["import React from 'react'\nimport {Link } from \"react-router-dom\";\n\nconst NavigationBar = () => {\n    return (\n        <nav className=\"main-navigation\">\n          <h2 className=\"top-nav-heading\">Top Navigation</h2>\n          <div className=\"container\">\n            <div className=\"subcontainer\">\n              <Link to=\"/\">Logo img</Link>\n              <div className=\"nav-search\">\n                <form className=\"primary-search-form\">\n                  <label className=\"search-label\">Search</label>\n                  <input className=\"search-field\" id=\"primary-search\" placeholder=\"Find a Recipe\"></input>\n                  <button className=\"search-button\" title=\"search\">search icon</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </nav>\n    )\n}\n\nexport default NavigationBar","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link } from \"react-router-dom\";\n\nconst CategoryIcon = (props) => {\n  return (\n    <li>\n        <Link to={`/category/${props.category}`}>\n            <div className={`category-${props.category}`}>\n                <img src={`../images/${props.category}.jpg`} alt={props.category}/>\n                <h3>{props.category}</h3>\n            </div>             \n        </Link>\n    </li>\n  );\n};\n\nCategoryIcon.propTypes = {\n    category: PropTypes.string.isRequired,\n};\nexport default CategoryIcon;\n","import React from \"react\";\nimport CategoryIcon from \"../CategoryIcon/CategoryIcon.jsx\"\nimport PropTypes from \"prop-types\";\n\nconst AllCategories = (props) => {\n  let displayContent;\n  if (props.categories) {\n    displayContent = (\n      <ul>\n        {props.categories.map( (category) => {\n          return (<CategoryIcon category={category}/>);\n          })\n        }\n      </ul>\n    );\n  } else {\n    displayContent = <div>You have no data!</div>;\n  }\n\n  return (\n    <div>\n      {displayContent}\n    </div>\n  );\n}\n\nAllCategories.propTypes = {\n  categories: PropTypes.array.isRequired\n}\nexport default AllCategories;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styles from \"./ArticleListItem.module.css\";\n// import ArticleImage from \"../ArticleImage/ArticleImage.jsx\"\n// import ArticleTextToggleButton from \"../ArticleTextToggleButton/ArticleTextToggleButton.jsx\";\n\nconst ArticleListItem = (props) => {\n//   const [isTextShowing, setIsTextShowing] = useState(false);\n\n//   function onClick() {\n//     setIsTextShowing(!isTextShowing);\n//   }\n\n  return (\n    <li>\n      <article>\n        <div>\n        <img url={props.recipe.image} alt={props.recipe.title} />\n          <h2>{props.recipe.title}</h2>\n          {/* {isTextShowing && (\n            <div>\n              <p>{props.recipe.summary}</p>\n            </div>\n          )} */}\n        </div>\n        {/* <ArticleTextToggleButton\n          buttonText={isTextShowing ? \"Show less\" : \"Show more\"}\n          onClick={onClick}\n        /> */}\n      </article>\n    </li>\n  );\n};\n\nArticleListItem.propTypes = {\n  article: PropTypes.object.isRequired,\n};\nexport default ArticleListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RecipeListItem from \"../RecipeListItem/RecipeListItem.jsx\";\nconst RecipeList = (props) => {\n  let displayContent;\n\n  if (props.articles) {\n    displayContent = (\n      <ul>\n        {props.articles.map((recipe) => (\n          <RecipeListItem recipe={recipe} key={recipe.id} />\n        ))}\n      </ul>\n    );\n  } else {\n    displayContent = <div>You have no data!</div>;\n  }\n\n  return (\n    <div>\n      {displayContent}\n    </div>\n  );\n};\n\nRecipeList.propTypes = {\n    recipes: PropTypes.array.isRequired\n}\nexport default RecipeList;","import React from 'react'\nimport AllCategories from \"../AllCategories/AllCategories.jsx\";\nimport RecipeList from \"../RecipeList/RecipeList.jsx\";\nimport PropTypes from \"prop-types\";\nconst Home = (props) => {\n    return (\n        <div>\n            <AllCategories categories={props.categories}/>\n            <RecipeList recipes={props.recipes}/>\n                \n        </div>\n    )\n}\nHome.propTypes = {\n    recipes: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n}\nexport default Home\n","import {React,useState, useEffect} from 'react'\nimport RecipeList from \"../RecipeList/RecipeList.jsx\";\nimport { isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Category = (props) => {\n    const [fetchedCategoryData, setFetchedCategoryData] = useState();\n    useEffect(() => {\n        const fetchData = async ({categoryId}) => {\n        // performs a GET request\n            if(categoryId){\n                const response = await fetch(`https://demo3289634.mockable.io/recipe/${categoryId}`);\n                const responseJson = await response.json();\n                setFetchedCategoryData(Object.values(responseJson));\n            }\n        };\n        if (isEmpty(fetchedCategoryData)) {\n            fetchData(props.categoryId);\n        }\n    }, [fetchedCategoryData, props.categoryId]);\n    \n    return isEmpty(fetchedCategoryData) ? null :(\n        <div>\n            {/* The bar page with categoryId of {props.categoryId} and productId of {props.productId} */}\n            <h1>{props.categoryId} </h1>\n            <RecipeList recipes={fetchedCategoryData.recipes}/>\n        </div>\n    )\n}\nCategory.propTypes = {\n    categoryId: PropTypes.string.isRequired\n  }\nexport default Category\n","import React from 'react'\n\nconst Baz = (props) => {\n    return (\n        <div>\n            The RecipeDetail page\n        </div>\n    )\n}\n\nexport default Baz\n","import React from 'react'\n\nconst Error = () => {\n    return (\n        <div>\n            The error page\n        </div>\n    )\n}\n\nexport default Error\n","import React, {useState, useEffect} from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavigationBar from \"./NavigationBar/NavigationBar.jsx\"\nimport Home from \"./Home/Home.jsx\";\nimport Category from \"./Category/Category.jsx\";\nimport RecipeDetail from \"./RecipeDetails/RecipeDetail.jsx\"\nimport Error from \"./Error/Error.jsx\";\nimport { isEmpty } from \"lodash\";\n\n// here is some external content. look at the /baz route below\n// to see how this content is passed down to the components via props\nfunction App() {\n  const [fetchedRecipes, setFetchedRecipes] = useState();\n  const [fetchedCategories, setFetchedCategories] = useState();\n  useEffect(() => {\n    const fetchedRecipes = async () => {\n      // performs a GET request\n      const recipesResponse = await fetch(\"https://demo3289634.mockable.io/recipes\");\n      const recipesResponseJson = await recipesResponse.json();\n      setFetchedRecipes(Object.values(recipesResponseJson));\n    };\n    const fetchedCategories = async () => {\n      // performs a GET request\n      const categoriesResponse = await fetch(\"https://demo3289634.mockable.io/categories\");\n      const categoriesResponseJson = await categoriesResponse.json();\n      setFetchedCategories(Object.values(categoriesResponseJson));\n    };\n\n    if (isEmpty(fetchedRecipes)) {\n      fetchedRecipes();\n    }\n    if (isEmpty(fetchedCategories)) {\n      fetchedCategories();\n    }\n\n\n  }, [fetchedRecipes, fetchedCategories]);\n\n  return isEmpty(fetchedRecipes) ? null : (\n    <div className=\"recipe-app\">\n      <head>\n        <title>PopularRecipes | Food, friends and love</title>\n      </head>\n      <header>\n        <NavigationBar/>\n      </header>\n      <Switch>\n        <Route path=\"/\"><Home recipes={fetchedRecipes} categories={fetchedCategories}/></Route>\n        <Route\n          path=\"/category/:categoryid\"\n          exact\n          render={({ match }) => (\n            // getting the parameters from the url and passing\n            // down to the component as props\n            <Category\n              categoryId={match.params.categoryId}\n            />\n          )}\n        />\n        <Route\n          path=\"/recipe/:id\"\n          exact\n          render={({ match }) => (\n            // getting the parameters from the url and passing\n            // down to the component as props\n            <RecipeDetail\n              id={match.params.id}\n            />\n          )}\n        />\n        <Route component={Error} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <Router basename={/github.io/.test(window.location) ? \"/seainfo6150-final-project-webapp\" : \"\"}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}